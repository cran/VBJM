// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEnsmallen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// init_LME
List init_LME(arma::field<arma::vec> Y, arma::field<arma::mat> X, arma::field<arma::mat> Z, const int maxiter, const double eps);
RcppExport SEXP _VBJM_init_LME(SEXP YSEXP, SEXP XSEXP, SEXP ZSEXP, SEXP maxiterSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::mat> >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::mat> >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< const int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< const double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(init_LME(Y, X, Z, maxiter, eps));
    return rcpp_result_gen;
END_RCPP
}
// VBJM
List VBJM(const List& datalist, const List& paralist, int maxiter, double eps);
RcppExport SEXP _VBJM_VBJM(SEXP datalistSEXP, SEXP paralistSEXP, SEXP maxiterSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type datalist(datalistSEXP);
    Rcpp::traits::input_parameter< const List& >::type paralist(paralistSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(VBJM(datalist, paralist, maxiter, eps));
    return rcpp_result_gen;
END_RCPP
}
// VBJM_raneff
List VBJM_raneff(const List& datalist, const List& paralist, double eps);
RcppExport SEXP _VBJM_VBJM_raneff(SEXP datalistSEXP, SEXP paralistSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type datalist(datalistSEXP);
    Rcpp::traits::input_parameter< const List& >::type paralist(paralistSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(VBJM_raneff(datalist, paralist, eps));
    return rcpp_result_gen;
END_RCPP
}
// VBJM_numH
double VBJM_numH(const arma::vec para_all, const List& datalist, List& paralist, double eps);
RcppExport SEXP _VBJM_VBJM_numH(SEXP para_allSEXP, SEXP datalistSEXP, SEXP paralistSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type para_all(para_allSEXP);
    Rcpp::traits::input_parameter< const List& >::type datalist(datalistSEXP);
    Rcpp::traits::input_parameter< List& >::type paralist(paralistSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(VBJM_numH(para_all, datalist, paralist, eps));
    return rcpp_result_gen;
END_RCPP
}
// VBJM_numH_sub
double VBJM_numH_sub(const arma::vec para_all, const List& datalist, List& paralist, double eps);
RcppExport SEXP _VBJM_VBJM_numH_sub(SEXP para_allSEXP, SEXP datalistSEXP, SEXP paralistSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type para_all(para_allSEXP);
    Rcpp::traits::input_parameter< const List& >::type datalist(datalistSEXP);
    Rcpp::traits::input_parameter< List& >::type paralist(paralistSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(VBJM_numH_sub(para_all, datalist, paralist, eps));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_VBJM_init_LME", (DL_FUNC) &_VBJM_init_LME, 5},
    {"_VBJM_VBJM", (DL_FUNC) &_VBJM_VBJM, 4},
    {"_VBJM_VBJM_raneff", (DL_FUNC) &_VBJM_VBJM_raneff, 3},
    {"_VBJM_VBJM_numH", (DL_FUNC) &_VBJM_VBJM_numH, 4},
    {"_VBJM_VBJM_numH_sub", (DL_FUNC) &_VBJM_VBJM_numH_sub, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_VBJM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
